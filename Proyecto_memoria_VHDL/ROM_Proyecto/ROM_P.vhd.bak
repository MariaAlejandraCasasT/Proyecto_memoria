library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;


entity MemoriaROM is 
      port(clock : in std_logic;
		     address: in std_logic_vector(3 downto 0);
			  data_out: out std_logic_vector(7 downto 0));
end entity;

architecture MemoriaROM_arch of MemoriaROM is

   type ROM_type is array (0 to 127) of std_logic_vector (7 downto 0);
   constant	ROM : ROM_type := (0 => LDA_IMM,
	                            1 => x"AA",
										 2 => STA_DIR,
										 3 => x"E0",
										 4 => BRA,
										 5 => x"00",
										 others => x"00" );
	begin 
      MEMORY: process (clock)
	      begin 
		      if (clock' event and clock = '1') then
			       data_out <= ROM (to_integer(unsigned(address)));
				end if; 
		end process;
		
		Enable : process (address)
		   begin 
			   if((to_integer(unsigned(address)) >= 0) and
				   (to_integer(unsigned(address)) <=127))then
				EN <= '1';
		      else  
		        EN <= '0';
				end if;
		end process;		
					 
end architecture;